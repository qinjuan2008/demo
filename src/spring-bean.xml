<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx ="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd 
">
	<!-- spring中两个功能： IOC 依赖注入, AOP：面向切面 -->
	<!-- IOC: 之前代码中的依赖配置到XML中,在运行时加载到JVM.以后修改XML即可 -->
	<!-- 1：默认情况下Spring管理的bean是单例 +饿汉 默认情况解决了对象创建数量(单例)、时间(饿汉)、类型(XML可以灵活配置) 
		2: lazy-init="true" 可以指定当前bean是懒汉模式 3: scope="prototype" 是多例模式 -->
	<!-- <bean id="p" class="cn.yd.oa.model.Product" lazy-init="true" scope="prototype" 
		/> -->
	<!--1：配置声明式事务(编程式就是在代码中编写，声明式就是在XML中配置 -->
	<bean id="tm"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds">
		</property>
	</bean>
	
	<!--2： spring aop，高级功能，需要导入一个tx标签(事务标签)，tx标签配置哪些方法需要动态切入事务 
	  tx必须参照事务管理器
	-->
	<tx:advice id="ad" transaction-manager="tm">
	<tx:attributes>
	<tx:method name="save*"/>
	<tx:method name="update*"/>
	<tx:method name="delete*"/>
	</tx:attributes>
	</tx:advice>
	
	<!--3:配置service层save update delete才需要切入事务
	配置哪些东西需要切事务，配置切面表达式
	cn.yd.oa.service.ProductService.* 代表当前包的类的所有方法
	(..)此方法有无参数都可以
	最前面的*　cn.yd.oa.service.ProductService：*代表当前方法有无返回值都可以
	-->
	<aop:config>
	<aop:pointcut expression="execution(* cn.yd.oa.service.ProductService.*(..))" id="pt"/>
	<!-- 通过此配置,就能确定声明式事务的 -->
	<aop:advisor advice-ref="ad" pointcut-ref="pt" />
	</aop:config>
	
	<bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 只需要指定配置数据库的4个基本参数 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:16608/db"></property>
		<property name="user" value="root"></property>
		<property name="password" value=""></property>
	</bean>

	<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="ds"></property>
	</bean>
	
	<!-- 项目开发中XML配置冗余(开发慢,维护方便)，注解：开发快，维护不方便，注解是不可能完全取代XML 
	注意如果要使用注解，则需要在spring配置文件中声明注解扫描(包括当前包的子包)
	-->
	<context:component-scan base-package="cn.yd.oa">
	
	</context:component-scan>
	<!-- 
	<bean id="pd" class="cn.yd.oa.dao.ProductDao">
		<property name="jdbcTemplate" ref="jt"></property>
	</bean>
     -->
	<!-- <bean id="ps" class="cn.yd.oa.service.ProductService">
		<property name="productDao" ref="pd"></property>
	</bean> -->

</beans>